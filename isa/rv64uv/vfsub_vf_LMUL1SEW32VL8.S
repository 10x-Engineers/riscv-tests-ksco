
# See LICENSE for license details.

# This file is automatically generated. Do not edit.

#*****************************************************************************
# vfsub_vf_LMUL1SEW32VL8.S
#-----------------------------------------------------------------------------
#
# Test vfsub.vf instructions.
# With LMUL=1, SEW=32, VL=8
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UV

RVTEST_CODE_BEGIN


  li t0, -1
  vsetvli t1, t0, e32,m1,ta,ma
  la a2, tdat
  vle32.v v2, (a2)
  vle32.v v1, (a2)

  
  li t0, 8
  vsetvli t1, t0, e32,m1,ta,ma
  li t2, 1065353216
  fmv.w.x f2, t2
  vfsub.vf v1, v2, f2

  li t0, -1
  vsetvli t1, t0, e32,m1,ta,ma
  la a1, res
  vse32.v v1, (a1)
  la a2, sres

  TEST_CASE(2, t0, 0xbf800000bf800000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(3, t0, 0xbf800000bf800000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(4, t0, 0xbf8000007fc00000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(5, t0, 0xbf800000bf800000, ld t0, 0(a1); addi a1, a1, 8)



  li t0, -1
  vsetvli t1, t0, e32,m1,ta,ma
  la a2, tdat
  vle32.v v2, (a2)
  vle32.v v1, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 8
  vsetvli t1, t0, e32,m1,ta,ma
  li t2, 1065353216
  fmv.w.x f2, t2
  vfsub.vf v1, v2, f2, v0.t

  li t0, -1
  vsetvli t1, t0, e32,m1,ta,ma
  la a1, res
  vse32.v v1, (a1)
  la a2, sres


  TEST_CASE(6, t0, 0xbf800000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(7, t0, 0xbf800000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(8, t0, 0x37fc00000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(9, t0, 0x7bf800000, ld t0, 0(a1); addi a1, a1, 8)



  li t0, -1
  vsetvli t1, t0, e32,m1,ta,ma
  la a2, tdat
  vle32.v v2, (a2)
  vle32.v v1, (a2)

  
  li t0, 8
  vsetvli t1, t0, e32,m1,tu,ma
  li t2, 1065353216
  fmv.w.x f2, t2
  vfsub.vf v1, v2, f2

  li t0, -1
  vsetvli t1, t0, e32,m1,ta,ma
  la a1, res
  vse32.v v1, (a1)
  la a2, sres


  TEST_CASE(10, t0, 0xbf800000bf800000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(11, t0, 0xbf800000bf800000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(12, t0, 0xbf8000007fc00000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(13, t0, 0xbf800000bf800000, ld t0, 0(a1); addi a1, a1, 8)



  li t0, -1
  vsetvli t1, t0, e32,m1,ta,ma
  la a2, tdat
  vle32.v v2, (a2)
  vle32.v v1, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 8
  vsetvli t1, t0, e32,m1,ta,ma
  li t2, 1065353216
  fmv.w.x f2, t2
  vfsub.vf v1, v2, f2, v0.t

  li t0, -1
  vsetvli t1, t0, e32,m1,ta,ma
  la a1, res
  vse32.v v1, (a1)
  la a2, sres


  TEST_CASE(14, t0, 0xbf800000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(15, t0, 0xbf800000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(16, t0, 0x37fc00000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(17, t0, 0x7bf800000, ld t0, 0(a1); addi a1, a1, 8)




  TEST_PASSFAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

res:
  .zero 40

sres:
  .zero 40

tdat:
  .quad 0x1
  .quad 0x1
  .quad 0x3fffffff8
  .quad 0x700000000
  .quad 0xffffffffefffffff

mask:
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555

RVTEST_DATA_END
