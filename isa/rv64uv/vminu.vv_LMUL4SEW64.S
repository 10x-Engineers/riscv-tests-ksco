
# See LICENSE for license details.

# This file is automatically generated. Do not edit.

#*****************************************************************************
# vminu.vv_LMUL4SEW64.S
#-----------------------------------------------------------------------------
#
# Test vminu.vv insnructions.
# With LMUL=4, SEW=64
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UV

RVTEST_CODE_BEGIN


  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, 8
  vsetvli t1, t0, e64,m4,ta,ma
  vminu.vv v4, v8, v12

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, 8
  vsetvli t1, t0, e64,m4,tu,ma
  vminu.vv v4, v8, v12

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 8
  vsetvli t1, t0, e64,m4,ta,ma
  vminu.vv v4, v8, v12, v0.t

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 8
  vsetvli t1, t0, e64,m4,ta,ma
  vminu.vv v4, v8, v12, v0.t

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, 15
  vsetvli t1, t0, e64,m4,ta,ma
  vminu.vv v4, v8, v12

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, 15
  vsetvli t1, t0, e64,m4,tu,ma
  vminu.vv v4, v8, v12

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 15
  vsetvli t1, t0, e64,m4,ta,ma
  vminu.vv v4, v8, v12, v0.t

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 15
  vsetvli t1, t0, e64,m4,ta,ma
  vminu.vv v4, v8, v12, v0.t

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, 16
  vsetvli t1, t0, e64,m4,ta,ma
  vminu.vv v4, v8, v12

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, 16
  vsetvli t1, t0, e64,m4,tu,ma
  vminu.vv v4, v8, v12

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 16
  vsetvli t1, t0, e64,m4,ta,ma
  vminu.vv v4, v8, v12, v0.t

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a2, tdat
  vle64.v v8, (a2)

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v4, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e64,m4,ta,ma
  vle64.v v12, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 16
  vsetvli t1, t0, e64,m4,ta,ma
  vminu.vv v4, v8, v12, v0.t

  li t0, -1
  vsetvli t1, t0, e64,m4,ta,ma
  la a1, res
  vse64.v v4, (a1)

  addi x0, x4, 8


  TEST_CASE(2, x0, 0x0)
  TEST_PASSFAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

res:
  .zero 528

tdat:
  .quad 0x0
  .quad 0x0
  .quad 0x1
  .quad 0x1
  .quad 0x3
  .quad 0x7
  .quad 0xfffffffffffffff8
  .quad 0x0
  .quad 0xffffffffffffffff
  .quad 0x1
  .quad 0xefffffffffffffff
  .quad 0x0
  .quad 0xefffffffffffffff
  .quad 0x1
  .quad 0xffffffffffffffff
  .quad 0x0
  .quad 0x0
  .quad 0x0
  .quad 0x1
  .quad 0x1
  .quad 0x3
  .quad 0x7
  .quad 0xfffffffffffffff8
  .quad 0x0
  .quad 0xffffffffffffffff
  .quad 0x1
  .quad 0xefffffffffffffff
  .quad 0x0
  .quad 0xefffffffffffffff
  .quad 0x1
  .quad 0xffffffffffffffff
  .quad 0x0
  .quad 0x0

mask:
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555

RVTEST_DATA_END
