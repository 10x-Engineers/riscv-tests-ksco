
# See LICENSE for license details.

# This file is automatically generated. Do not edit.

#*****************************************************************************
# vsaddu_vx_LMUL1SEW8VL16.S
#-----------------------------------------------------------------------------
#
# Test vsaddu.vx instructions.
# With LMUL=1, SEW=8, VL=16
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UV

RVTEST_CODE_BEGIN


  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a2, tdat
  vle8.v v2, (a2)
  vle8.v v1, (a2)

  
  li t0, 16
  vsetvli t1, t0, e8,m1,ta,ma
  li t2, 1
  vsaddu.vx v1, v2, t2

  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a1, res
  vse8.v v1, (a1)
  la a2, sres

  TEST_CASE(2, t0, 0x10204f9fff0f0ff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(3, t0, 0x102080102010201, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(4, t0, 0x103f8ffefefff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(5, t0, 0x1070001000100, ld t0, 0(a1); addi a1, a1, 8)



  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a2, tdat
  vle8.v v2, (a2)
  vle8.v v1, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 16
  vsetvli t1, t0, e8,m1,ta,ma
  li t2, 1
  vsaddu.vx v1, v2, t2, v0.t

  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a1, res
  vse8.v v1, (a1)
  la a2, sres


  TEST_CASE(6, t0, 0x203f9fff0efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(7, t0, 0x2070101010101, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(8, t0, 0x103f8ffefefff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(9, t0, 0x1070001000100, ld t0, 0(a1); addi a1, a1, 8)



  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a2, tdat
  vle8.v v2, (a2)
  vle8.v v1, (a2)

  
  li t0, 16
  vsetvli t1, t0, e8,m1,tu,ma
  li t2, 1
  vsaddu.vx v1, v2, t2

  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a1, res
  vse8.v v1, (a1)
  la a2, sres


  TEST_CASE(10, t0, 0x10204f9fff0f0ff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(11, t0, 0x102080102010201, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(12, t0, 0x103f8ffefefff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(13, t0, 0x1070001000100, ld t0, 0(a1); addi a1, a1, 8)



  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a2, tdat
  vle8.v v2, (a2)
  vle8.v v1, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 16
  vsetvli t1, t0, e8,m1,ta,ma
  li t2, 1
  vsaddu.vx v1, v2, t2, v0.t

  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a1, res
  vse8.v v1, (a1)
  la a2, sres


  TEST_CASE(14, t0, 0x203f9fff0efff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(15, t0, 0x2070101010101, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(16, t0, 0x103f8ffefefff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(17, t0, 0x1070001000100, ld t0, 0(a1); addi a1, a1, 8)




  TEST_PASSFAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

res:
  .zero 40

sres:
  .zero 40

tdat:
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff

mask:
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555

RVTEST_DATA_END
